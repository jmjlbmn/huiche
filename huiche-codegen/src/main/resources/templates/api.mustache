package {{basePackage}}.api;

import {{entityPackage}}.{{entityName}};
import {{basePackage}}.service.{{entityName}}Service;
import lombok.RequiredArgsConstructor;
import org.huiche.domain.Page;
import org.huiche.domain.PageRequest;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.Valid;

/**
* @author huiche-codegen
*/
@RestController
@RequestMapping("{{camelCaseName}}")
@RequiredArgsConstructor
public class {{entityName}}Api {
    private final {{entityName}}Service service;

    @PostMapping
    public {{entityName}} create(@RequestBody @Valid {{entityName}} entity) {
        return service.create(entity);
    }

    {{#idType}}
    @DeleteMapping("{id}")
    public void delete(@PathVariable {{idType}} id) {
        service.delete(id);
    }

    @PutMapping("{id}")
    public void update(@RequestBody @Valid {{entityName}} entity, @PathVariable {{idType}} id) {
        service.update(entity, id);
    }

    @GetMapping("{id}")
    public {{entityName}} get(@PathVariable {{idType}} id) {
        return service.get(id);
    }
    {{/idType}}
    
    @GetMapping
    public Page<{{entityName}}> page(PageRequest pageRequest,{{entityName}} query) {
        return service.page(pageRequest,query);
    }
}